from groq_api import send_message
from zemberek_bridge import correct_text

def main():
    print("ğŸ¤– GroqChat'e hoÅŸ geldiniz! (Ã‡Ä±kmak iÃ§in 'Ã§Ä±k' yazÄ±n)\n")

    # Ä°lk system mesajÄ± â€“ modelin kimliÄŸini belirler
    chat_history = [
        {
            "role": "system",
            "content": (
                "Sen TÃ¼rkÃ§e\u2019yi doÄŸal, akÄ±cÄ± ve samimi bir Ã¼slupla konuÅŸan "
                "bir sohbet asistanÄ±sÄ±n. Sorulara kÄ±sa ve sade cÃ¼mlelerle yanÄ±t "
                "ver, gereksiz resmi ifadelerden kaÃ§Ä±n. Emin olmadÄ±ÄŸÄ±n konularda "
                "tahmin yÃ¼rÃ¼tme, kÄ±saca 'Bilmiyorum' de. Web sitelerini gezemez "
                "ve gerÃ§ek zamanlÄ± iÃ§erik gÃ¶remezsin."
            ),
        }
    ]

    while True:
        user_input = input("ğŸŸ¢ Sen: ").strip()

        if user_input.lower() in ["Ã§Ä±k", "exit", "quit"]:
            print("ğŸ”š Sohbet sonlandÄ±rÄ±ldÄ±. GÃ¶rÃ¼ÅŸmek Ã¼zere!")
            break

        corrected_user = correct_text(user_input)

        if corrected_user != user_input:
            print(f"\U0001F7E2 Sen: {user_input}")
            print(f"\U0001F7E2 D\u00fczeltilmi\u015f: {corrected_user}")

        # Yeni kullanÄ±cÄ± mesajÄ±nÄ± geÃ§miÅŸe ekle
        chat_history.append({"role": "user", "content": corrected_user})

        # API'den yanÄ±t al
        reply = send_message(chat_history)
        corrected_reply = correct_text(reply)

        # Model cevabÄ±nÄ± geÃ§miÅŸe ekle
        chat_history.append({"role": "assistant", "content": corrected_reply})

        if corrected_reply != reply:
            print(f"\U0001F916 Bot: {reply}")
            print(f"\U0001F916 D\u00fczeltilmi\u015f: {corrected_reply}\n")
        else:
            print(f"\U0001F916 Bot: {corrected_reply}\n")

if __name__ == "__main__":
    main()
